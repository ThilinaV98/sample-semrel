name: üöÄ Semantic Release

# Trigger when commits are pushed to main (after PR merge)
on:
  push:
    branches:
      - main
  # Also allow manual trigger for hotfixes
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type (for hotfixes)'
        required: false
        default: 'standard'
        type: choice
        options:
          - standard
          - hotfix

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  semantic-release:
    name: üì¶ Semantic Release
    runs-on: ubuntu-latest
    # Run on push to main or manual trigger
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: üü¢ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: üì¶ Install dependencies
        run: npm ci
      
      - name: üîç Validate commit source
        if: github.event_name == 'push'
        run: |
          # Check the commit message or branch that was merged
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          echo "Last commit message: $COMMIT_MESSAGE"
          
          # Check if this was a merge from release/* or hotfix/*
          if [[ "$COMMIT_MESSAGE" =~ "Merge pull request" ]]; then
            if [[ ! "$COMMIT_MESSAGE" =~ "release/|hotfix/" ]]; then
              echo "‚ö†Ô∏è Warning: Merge does not appear to be from release/* or hotfix/* branch"
              echo "Continuing anyway as this might be a direct commit or different merge"
            else
              echo "‚úÖ Valid merge from release/* or hotfix/* branch detected"
            fi
          fi
      
      - name: üîÑ Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # Remove pre-release suffix if present
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          if [[ "$CURRENT_VERSION" == *"-"* ]]; then
            BASE_VERSION=$(echo $CURRENT_VERSION | sed 's/-.*$//')
            echo "Converting pre-release $CURRENT_VERSION to stable release"
            npm version $BASE_VERSION --no-git-tag-version
          fi
          
          # Run semantic-release
          npx semantic-release