name: üöÄ Semantic Release

# Trigger when release branch PR is merged to main
on:
  pull_request:
    branches:
      - main
    types:
      - closed
  # Also allow manual trigger for hotfixes
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type (for hotfixes)'
        required: false
        default: 'standard'
        type: choice
        options:
          - standard
          - hotfix

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  semantic-release:
    name: üì¶ Semantic Release
    runs-on: ubuntu-latest
    # Only run if PR was merged (not just closed) OR manual trigger
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: üü¢ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: üì¶ Install dependencies
        run: npm ci
      
      - name: üîç Validate release branch
        if: github.event_name == 'pull_request'
        run: |
          # Ensure PR is from a release/* or hotfix/* branch
          SOURCE_BRANCH="${{ github.event.pull_request.head.ref }}"
          if [[ ! "$SOURCE_BRANCH" =~ ^(release/|hotfix/) ]]; then
            echo "‚ùå Error: Only release/* or hotfix/* branches can trigger production releases"
            echo "Source branch: $SOURCE_BRANCH"
            exit 1
          fi
          echo "‚úÖ Valid release branch: $SOURCE_BRANCH"
      
      - name: üîÑ Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # Remove pre-release suffix if present
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          if [[ "$CURRENT_VERSION" == *"-"* ]]; then
            BASE_VERSION=$(echo $CURRENT_VERSION | sed 's/-.*$//')
            echo "Converting pre-release $CURRENT_VERSION to stable release"
            npm version $BASE_VERSION --no-git-tag-version
          fi
          
          # Run semantic-release
          npx semantic-release